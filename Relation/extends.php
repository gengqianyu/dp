<?php
//参与者，将构成设计模式的类和接口称为参与者（participants）,参与者的名使用粗体显示
//接口显示为斜体，（接口包括抽象类和接口）
//一个典型的设计模式类图，会有一下五个参与者。
//1，客户（client，隐含）client类通常会作为设计模式的一部分。程序的主要部分为是各个
//相互关联的参与者，而不是客户。
//2,创建者（creator）
//3,具体创建者（concreteCreator）
//4,产品（product）
//5,具体产品（concreteProduct）
//
//关系说明
//1，关系说明之相识关系 uml中用一个简单箭头指示。——>
//2，聚合关系，此关系和相识关系类似，不过关系更强硬，聚合关系表示一个聚合对象，与它的所有者有相同的生命期
//聚合关系用一个正菱形加一个箭头表示<>——>
//
//3，继承和实现关系
//继承和实现使用了相同的记法：三角形。单个继承或实现使用一个三角形，（线上三角形）
//，而指示多重继承和实现时，会把三角形水平置于具体类的公共连线上。
//
//4,创建关系 
 //在一个设计模式中，一个对象创建另一个对象的实例时，采用的记法是一条虚线，并
//有一个箭头指向实例化对象。
//注：使用php讨论类之间的相识关系时，有些情况下，可能有必要，实例化一个类来包含
//另一个类或接口的引用，这种实例化目的是要创建一个数据类型来包含引用，而不是为了使用这个实例化对象。    
//这是一种相识关系，并非创建关系。    

// 多重关系
//类图中相识关系或聚合关系的箭头末端有一个小球，表示引用或聚合多个对象。可以使用享元（flyweight）模式
//引用共享对象或不同对象的多个实例。
//
//对象图
//类图只显示类，与之不同，对象图只显示实例。箭头则指示所引用对象。对象图，采用的命名约定是使用类实例名
//，前面加上一个小写字母a    
//    
    

